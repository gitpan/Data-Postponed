Revision history for Data-Postponed

0.01    Somewhere around the middle of March, 2005.
  - First version, released on an unsuspecting world as Time-Traveler.

0.02    Mar 30, 2005
  - Renamed to Data-Postponed, rewrote the entire thing and wrote
    tests for nearly everything.

0.03    Mar 30, 2005
  - Added MANIFEST.SKIP to MANIFEST.
        Removed MANIFEST.SKIP from MANIFEST.

0.04    Mar 30, 2005
  - Fixed POD bug in Data::Postponed::Once. It was still named
    Data::Postponed::SemiStrict.
  - Split Data::Postponed::_ReadOnly::Array and ::Scalar off into
    separate files so search.cpan.org will render
    Data::Postpone::OnceOnly.pm's POD correctly.
  - Updated META.yml
  - Added DESTROY methods to all classes so it won't be
    AUTOLOADed. This is just a performance micro-optimization.

0.05    Mar 30, 2005
  - Fixed POD bug in Data::Postponed::OnceOnly. It was accidentally
    named Data::Postponed::Forever.
  - Moved Data::Postponed::_ReadOnly::Scalar back into ::OnceOnly and deleted
    Data::Postponed::_ReadOnly::Array.

0.06    Mar 31, 2005
  - Fixed 5.005.04 parser bug in Data::Postponed::OnceOnly. Now,
    EXISTS() is only compiled for high enough interpreters. Even
    attempting to parse this breaks perl's parser and strange errors
    result otherwise.

0.07   Apr 10, 2005
  - Spelling fixes in all the POD. I consistently mispelled
    'Data::Postponed' as 'Data::Postpone'.

0.17   May 24, 2005
  - Two killer bugs were discovered in 0.07 and so the entire module
    was reimplemented using test-first development.

    Devel::Cover was used to make sure all the code pathways are
    covered. There are a few branches not followed but they are mostly in
    areas that perl doesn't define execution order like the cleanup of
    globals during global destruction.
    
    The undocumented ->Dump method produces lisp-like data. In scalar
    or list context just returns its value, in void context it prints
    it.

0.18   May 24, 2005
  - Found out why 5.005_04 doesn't work: dereferencing and iterators
    aren't overloadable so the tests failed.
  - Removed t/debug.tst from the MANIFEST so it will be removed from
    the SIGNATURE so when it changes, it won't be an error.
  - In Data::Postponed::Once and Data::Postponed::OnceOnly, attempt to
    overwrite the object with the finalized value but only on recent
    enough perls. Older stuff has a bug I don't fully comprehend yet.
  - Added some compile-time conditional compilation so stuff that is
    only applicable to 5.6+ will only be seen in those cases, etc.
